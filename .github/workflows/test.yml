# Copyright (C) 2023 Daniel Mueller <deso@posteo.net>
# SPDX-License-Identifier: GPL-3.0-or-later

name: Test

on:
  pull_request:
  push:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  # Build without debug information enabled to decrease compilation time
  # and binary sizes in CI. This option is assumed to only have marginal
  # effects on the generated code, likely only in terms of section
  # arrangement. See
  # https://doc.rust-lang.org/cargo/reference/environment-variables.html
  # https://doc.rust-lang.org/rustc/codegen-options/index.html#debuginfo
  RUSTFLAGS: '-C debuginfo=0'

jobs:
  build:
    name: Build [${{ matrix.profile }}, ${{ matrix.args }}]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        profile: [dev, release]
        args: ['']
        include:
        - profile: dev
          args: --features=generate-opengl-bindings
    steps:
    - uses: actions/checkout@v4
    - name: Install dependencies
      run: sudo apt-get install libgl-dev
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true
    - name: Build ${{ matrix.profile }}
      run: cargo build --profile=${{ matrix.profile }} --all-targets ${{ matrix.args }}
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install dependencies
      run: sudo apt-get install libgl-dev
    - name: Test
      run: cargo test
  clippy:
    name: Lint with clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          override: true
      - run: cargo clippy --no-deps --all-targets -- -A unknown_lints -D warnings
  rustfmt:
    name: Check code formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt
          override: true
      - run: cargo +nightly fmt -- --check
